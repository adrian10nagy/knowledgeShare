@model Softvision.BL.Entities.QuestionBL
@using Softvision.BL.Entities;
@using Softvision.All.Helpers.Base;

@{
    ViewBag.Title = "Ask a Question in Developers Place";
    var categories = (IEnumerable<CategoryBL>)ViewData["categories"];
}

<h2>Ask a Question</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (!Softvision.All.Helpers.Base.BaseMVC.IsLoggedIn())
        {

            <div class="form-group">
                @Html.LabelFor(model => model.AnonymousName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AnonymousName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AnonymousName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AnonymousEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AnonymousEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AnonymousEmail, "", new { @class = "text-danger" })
                </div>
            </div>

        }

        <div class="form-group">
            @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownList("drpCategory", new SelectList(categories, "Id", "Name"), new { @class = "form-control", @onchange = "updateSubCategory(this.value)" })
            </div>
        </div>

        @* div for subCategory Ajax Call *@
        <div class="form-group" id="subCategoryDiv">
        </div>


        @* Load text editor *@
        @Html.Partial("~/Views/Shared/Helpers/_textEditor.cshtml", new WritingBL { })

        <div class="form-group">
            <input type="submit" value="Create" id="btnQuestionCreate" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript" language="javascript">
	window.onload = function () {
        updateSubCategory(@categories.FirstOrDefault().Id)
    };
</script>
